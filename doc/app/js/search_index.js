var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","bbcingestion","broadcast","broadcaster","broadcasterscontroller","broadcastershelper","broadcastscontroller","broadcastshelper","channel","channelscontroller","channelshelper","fifocache","imagescontroller","imageshelper","user","userscontroller","usershelper","as_json()","as_json()","as_json()","as_json()","attachment_url()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","index()","index()","index()","index()","ingest()","ingest()","ingest_schedule()","ingestion_formatted_date()","new()","new()","new()","new()","new()","now()","now()","perform()","pull_schedule()","push()","resize()","shift()","show()","show()","show()","show()","today()","update()","update()","update()","update()","readme_for_app"],"longSearchIndex":["applicationcontroller","applicationhelper","bbcingestion","broadcast","broadcaster","broadcasterscontroller","broadcastershelper","broadcastscontroller","broadcastshelper","channel","channelscontroller","channelshelper","fifocache","imagescontroller","imageshelper","user","userscontroller","usershelper","broadcast#as_json()","broadcaster#as_json()","channel#as_json()","user#as_json()","applicationhelper#attachment_url()","broadcasterscontroller#create()","broadcastscontroller#create()","channelscontroller#create()","userscontroller#create()","broadcasterscontroller#destroy()","broadcastscontroller#destroy()","channelscontroller#destroy()","userscontroller#destroy()","broadcasterscontroller#edit()","broadcastscontroller#edit()","channelscontroller#edit()","userscontroller#edit()","broadcasterscontroller#index()","broadcastscontroller#index()","channelscontroller#index()","userscontroller#index()","channel#ingest()","channelscontroller#ingest()","bbcingestion#ingest_schedule()","bbcingestion#ingestion_formatted_date()","broadcasterscontroller#new()","broadcastscontroller#new()","channelscontroller#new()","fifocache::new()","userscontroller#new()","broadcast::now()","broadcastscontroller#now()","bbcingestion#perform()","bbcingestion#pull_schedule()","fifocache#push()","imagescontroller#resize()","fifocache#shift()","broadcasterscontroller#show()","broadcastscontroller#show()","channelscontroller#show()","userscontroller#show()","broadcast::today()","broadcasterscontroller#update()","broadcastscontroller#update()","channelscontroller#update()","userscontroller#update()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BBCIngestion","","BBCIngestion.html","",""],["Broadcast","","Broadcast.html","",""],["Broadcaster","","Broadcaster.html","",""],["BroadcastersController","","BroadcastersController.html","",""],["BroadcastersHelper","","BroadcastersHelper.html","",""],["BroadcastsController","","BroadcastsController.html","",""],["BroadcastsHelper","","BroadcastsHelper.html","",""],["Channel","","Channel.html","",""],["ChannelsController","","ChannelsController.html","",""],["ChannelsHelper","","ChannelsHelper.html","",""],["FifoCache","","FifoCache.html","","<p>FifoCache is used to store data in a first in, first out list when the list\nhits its maximum size, the …\n"],["ImagesController","","ImagesController.html","",""],["ImagesHelper","","ImagesHelper.html","",""],["User","","User.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["as_json","Broadcast","Broadcast.html#method-i-as_json","(options={})",""],["as_json","Broadcaster","Broadcaster.html#method-i-as_json","(options={})",""],["as_json","Channel","Channel.html#method-i-as_json","(options={})",""],["as_json","User","User.html#method-i-as_json","(options={})",""],["attachment_url","ApplicationHelper","ApplicationHelper.html#method-i-attachment_url","(file, style=:medium)",""],["create","BroadcastersController","BroadcastersController.html#method-i-create","()","<p>POST /broadcasters POST /broadcasters.json\n"],["create","BroadcastsController","BroadcastsController.html#method-i-create","()","<p>POST /broadcasts POST /broadcasts.json\n"],["create","ChannelsController","ChannelsController.html#method-i-create","()","<p>POST /channels POST /channels.json\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /users POST /users.json\n"],["destroy","BroadcastersController","BroadcastersController.html#method-i-destroy","()","<p>DELETE /broadcasters/1 DELETE /broadcasters/1.json\n"],["destroy","BroadcastsController","BroadcastsController.html#method-i-destroy","()","<p>DELETE /broadcasts/1 DELETE /broadcasts/1.json\n"],["destroy","ChannelsController","ChannelsController.html#method-i-destroy","()","<p>DELETE /channels/1 DELETE /channels/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.json\n"],["edit","BroadcastersController","BroadcastersController.html#method-i-edit","()","<p>GET /broadcasters/1/edit\n"],["edit","BroadcastsController","BroadcastsController.html#method-i-edit","()","<p>GET /broadcasts/1/edit\n"],["edit","ChannelsController","ChannelsController.html#method-i-edit","()","<p>GET /channels/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["index","BroadcastersController","BroadcastersController.html#method-i-index","()","<p>GET /broadcasters GET /broadcasters.json\n"],["index","BroadcastsController","BroadcastsController.html#method-i-index","()","<p>GET /broadcasts GET /broadcasts.json\n"],["index","ChannelsController","ChannelsController.html#method-i-index","()","<p>GET /channels GET /channels.json\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /users GET /users.json\n"],["ingest","Channel","Channel.html#method-i-ingest","(date)",""],["ingest","ChannelsController","ChannelsController.html#method-i-ingest","()",""],["ingest_schedule","BBCIngestion","BBCIngestion.html#method-i-ingest_schedule","()",""],["ingestion_formatted_date","BBCIngestion","BBCIngestion.html#method-i-ingestion_formatted_date","(date)",""],["new","BroadcastersController","BroadcastersController.html#method-i-new","()","<p>GET /broadcasters/new GET /broadcasters/new.json\n"],["new","BroadcastsController","BroadcastsController.html#method-i-new","()","<p>GET /broadcasts/new GET /broadcasts/new.json\n"],["new","ChannelsController","ChannelsController.html#method-i-new","()","<p>GET /channels/new GET /channels/new.json\n"],["new","FifoCache","FifoCache.html#method-c-new","(name, size=1000)","<p>FifoCache can store multiple caches. On initialize, we set the name of the\ncache and the size of it\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new GET /users/new.json\n"],["now","Broadcast","Broadcast.html#method-c-now","()","<p>fetch a list of shows across all channels which are on now\n"],["now","BroadcastsController","BroadcastsController.html#method-i-now","()",""],["perform","BBCIngestion","BBCIngestion.html#method-i-perform","(channel_id, date)",""],["pull_schedule","BBCIngestion","BBCIngestion.html#method-i-pull_schedule","(url)",""],["push","FifoCache","FifoCache.html#method-i-push","(name, object)","<p>place the new object at the end of the list but check the length of the\ncache first. if its hitting its …\n"],["resize","ImagesController","ImagesController.html#method-i-resize","()","<p>/images//resize\n"],["shift","FifoCache","FifoCache.html#method-i-shift","(name, size=0)","<p>return the oldest object in the queue and remove the object from the queue.\nThe object cannot be  referenced …\n"],["show","BroadcastersController","BroadcastersController.html#method-i-show","()","<p>GET /broadcasters/1 GET /broadcasters/1.json\n"],["show","BroadcastsController","BroadcastsController.html#method-i-show","()","<p>GET /broadcasts/1 GET /broadcasts/1.json\n"],["show","ChannelsController","ChannelsController.html#method-i-show","()","<p>GET /channels/1 GET /channels/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1 GET /users/1.json\n"],["today","Broadcast","Broadcast.html#method-c-today","(channel_id=nil)","<p>fetch all the shows which are running today. today is defined by before and\nafter filters\n"],["update","BroadcastersController","BroadcastersController.html#method-i-update","()","<p>PUT /broadcasters/1 PUT /broadcasters/1.json\n"],["update","BroadcastsController","BroadcastsController.html#method-i-update","()","<p>PUT /broadcasts/1 PUT /broadcasts/1.json\n"],["update","ChannelsController","ChannelsController.html#method-i-update","()","<p>PUT /channels/1 PUT /channels/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>PUT /users/1 PUT /users/1.json\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}